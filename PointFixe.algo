fonction PointFixe(Graphe g InOut, Noeud depart) :

début :

    idDepart <- 0

        tant que idDepart < longueur(g.listeNoeuds())-1 et g.listeNoeuds()[idDepart] != depart faire :

            idDepart <- idDepart + 1

    fpour

    j <- 0

    g.valeurs[idDepart].valeur <- 0

    pour j de 0 a longueur(hg.valeurs)-1 faire :

        g.valeurs[j].valeur <- +∞

    fpour

    tourne <- vrai

    tant que tourne faire :

        tourne <-faux

        i <- 0

        pour i de 0 à longueur(g.listeNoeuds())-1 faire :

            si g.valeurs[i].valeur > g.valeurs[idDepart].valeur + g.suivants(depart)[i].getCout() :

                g.valeurs[i].valeur <- g.valeurs[idDepart].valeur + g.suivants(depart)[i].getCout()
                g.valeurs[i].parent <- depart
                tourne <- vrai

            fsi

        fpour

    ftant

fin PointFixe()


======= Lexique =======

tourne : booléen,   variable qui enregistre si une modification a été faite (devient faux si on a atteint le point fixe)
j : entier,         variable pour tenir la première boucle à jour et  initialiser les valeurs du graphe à +∞
i : entier,         variable pour tenir la deuxième boucle à jour et sélectionner les noeuds enfants du noeus de départ
idDepart : entier,  identificateur du noeud de départ